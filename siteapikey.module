<?php

/**
 * @file
 * Contains complex business logic for siteapikey module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function siteapikey_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  // Adding a fieldset for our textfield.
  $form['siteapikey_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Site API Key'), 
    '#weight' => 5, 
    '#collapsible' => FALSE,
  );
  // Adding the siteapikey textfield.
  $form['siteapikey_fieldset']['siteapikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Site API Key'), 
    '#default_value' => variable_get('siteapikey', t('No API Key yet')),
    '#required' => TRUE,
  );

  // Check if the variable is set, if yes change our submit button name.
}

/**
 * Implements hook_menu().
 */
function siteapikey_menu() {
  $items['page_json/%/%'] = array(
    'title' => t('Node Object return Endpoint.'),
    'page callback' => '_node_json_api_callback',
    'page arguments' => array(1,2),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Node JSON view callback.
 */
function _node_json_api_callback($site_api_key, $node_id) {
  // Get the value stored in system for site api key.
  $key = variable_get('siteapikey');

  // Check if value is set yet, if no we don't want to proceed further.
  // We also check at the same time if the provided value for $site_api_key
  // matches the stotred value.
  if($key == NULL || $key != $site_api_key) {
    $response = array(
      'ack_code' => 10001,
      'error_message' => t('Site API Key is invalid.')
    );
    return drupal_json_output($response);
  }

  // We check for node id being valid.
  if(is_int($node_id) && $node_id > 0) {
    $node_object = node_load($node_id);

    // Check for type of the node.
    if($node_object != FALSE && $node->type == 'page') {
      $response = array(
        'ack_code' => 20001,
        'response' => $node_object,
      );
      return drupal_json_output($response);
    }
    else{
      $response = array(
        'ack_code' => 10003,
        'error_message' => t('Node ID is invalid or not of type "Page"')
      );
      return drupal_json_output($response);
    }
  }
  else {
    $response = array(
      'ack_code' => 10002,
      'error_message' => t('Node ID is not an integer value.')
    );
    return drupal_json_output($response);
  }
}
